<!DOCTYPE html>
<html>
<head>
    <meta>
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=0"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <link href="/{{normalize}}/normalize.css" type="text/css" rel="stylesheet"/>
    <title>{{appname}} Mocha Runner</title>
    <script src="/{{es5Shim}}/es5-shim.js?nowrap"></script>
    <script src="/{{es5Shim}}/es5-sham.js?nowrap"></script>
    <script src="/{{consolePolyfill}}/index.js?nowrap"></script>
    <script src="/{{mocha}}/mocha.js?nowrap"></script>
    <script src="/{{modulex}}/build/modulex-debug.js?nowrap"></script>
    <script src="/{{nodeJscover}}/lib/front-end/header.js?nowrap"></script>
    <script src="/{{nodeJscover}}/lib/front-end/jscoverage-branch.js?nowrap"></script>
    <script src='/{{nodeJscover}}/lib/reporters/mocha/console.js?nowrap'></script>
    <link href="/{{mocha}}/mocha.css?nowrap" type="text/css" rel="stylesheet"/>
    {{#if(react && query.dev === undefined)}}
    <script src='/node_modules/react/dist/react-with-addons.js?nowrap'></script>
    {{/if}}
</head>
<body>
<h1>{{appname}} Mocha Runner</h1>

<div id="mocha"></div>

<script>
    (function () {
        window.process = {
            env: {}
        };
        mocha.setup('bdd');
        {{#if(react && query.dev === undefined)}}
        define(location.protocol + '//' + location.host + '/node_modules/react/addons', function () {
            return window.React;
        });
        define(location.protocol + '//' + location.host + '/node_modules/react/react', function () {
            return window.React;
        });
        {{/if}}
        if (location.href.indexOf('coverage') !== -1) {
            require.config('packages', {
                '/src': {
                    filter: 'coverage',
                    base: '/src'
                }
            });
        }
        require(['.' + '/index.spec'], function () {
            window.mochaRunner = (window.mochaPhantomJS || mocha).run();
        });
    })();
</script>
</body>
</html>
